//____________IMPORT/EXPORT____________
// Hooks de React

// Servicios

// Contextos

// Contextos personalizados

// Estilos personalizados

//____________IMPORT/EXPORT____________

// Funci√≥n contexto para controlar

// constantes con contextos perzonalizados

// UseState para controlar el valor del contexto

// UseEffect para obtener los datos desde la base de datos

// UseEffect para verificar que los datos existan

// Return para darle valor al contexto y heredarlo

//____________CHARTS____________
const [isItemDate,setIsItemDate] = useContext(ItemDateContext);
//____________FORM____________
const [isTextFieldsUser,setIsTextFieldsUser] = useContext(TextFieldsUserContext);
const [isTextFieldsSupplier,setIsTextFieldsSupplier] = useContext(TextFieldsSupplierContext);
const [isSelect,setIsSelect] = useContext(SelectContext);
const [isRadioPermissions,setIsRadioPermissions] = useContext(RadioPermissionsContext);
const [isRadioStatus,setIsRadioStatus] = useContext(RadioStatusContext);
const [isCheckbox,setIsCheckbox] = useContext(CheckboxContext);
//____________FORM____________
//____________REF____________
const isAlertGreeting = useContext(RefAlertGreetingContext);
const isKeyboard = useContext(RefKeyboardContext);
const {Modal,Form,Button_Edit_U,Button_Delete_U} = useContext(RefUsersContext);
const {Modal,Form,Button_Edit_P,Button_Enable_P} = useContext(RefPermissionsContext);
const {Modal,Form,Button_Enable_S} = useContext(RefStatusContext);
const {Modal,Form,Button_Edit_S,Button_Delete_S,Button_Details_S} = useContext(RefSuppliersContext);
//____________REF____________
//____________SESSION____________
const [isLoggedUser,setIsLoggedUser] = useContext(LoggedUserContext);
const [isLoggedPermissions,setIsLoggedPermissions] = useContext(LoggedPermissionsContext);
const [isLoggedStatus,setIsLoggedStatus] = useContext(LoggedStatusContext);
const [isLoggedLog,setIsLoggedLog] = useContext(LoggedLogContext);
const [isLoggedLogged,setIsLoggedLogged] = useContext(LoggedLoggedContext);
const [isLoggedType,setIsLoggedType] = useContext(LoggedTypeContext);
//____________SESSION____________
//____________SOCKET____________
const [socket] = useContext(SocketContext);
//____________SOCKET____________
//____________SUPPLIERS____________
const [isSuppliers,setIsSuppliers] = useContext(SuppliersContext);
const [isSupplierAdd,setIsSupplierAdd] = useContext(SupplierAddContext);
const [isSupplierEdit,setIsSupplierEdit] = useContext(SupplierEditContext);
const [isObservations,setIsObservations] = useContext(ObservationsContext);

//____________SUPPLIERS____________
//____________USERS____________
const [isUsers,setIsUsers] = useContext(UsersContext);
const [isUserAdd,setIsUserAdd] = useContext(UserAddContext);
const [isUserEdit,setIsUserEdit] = useContext(UserEditContext);
const [isPermissions,setIsPermissions] = useContext(PermissionsContext);
const [isPermissionsAdd,setIsPermissionsAdd] = useContext(PermissionsAddContext);
const [isPermissionsEdit,setIsPermissionsEdit] = useContext(PermissionsEditContext);
const [isPermissionsEnable,setIsPermissionsEnable] = useContext(PermissionsEnableContext);
const [isStatus,setIsStatus] = useContext(StatusContext);
const [isStatusAdd,setIsStatusAdd] = useContext(StatusAddContext);
const [isStatusEnable,setIsStatusEnable] = useContext(StatusEnableContext);
const [isUserTypes,setIsUserTypes] = useContext(UserTypesContext);
//____________USERS____________
//____________VARIABLES____________
const [isSelectedRow,setIsSelectedRow] = useContext(SelectedRowContext);
const [isSearchTerm,setIsSearchTerm] = useContext(SearchTermContext);
const [isVerificationBlock,setIsVerificationBlock] = useContext(VerificationBlockContext);
const [isAnimation,setIsAnimation] = useContext(AnimationContext);
const [isActionBlock,setIsActionBlock] = useContext(ActionBlockContext);
const [isViewPassword,setIsViewPassword] = useContext(ViewPasswordContext);
const [isKeyboard,setIsKeyboard] = useContext(KeyboardContext);
const [isKeyboardView,setIsKeyboardView] = useContext(KeyboardViewContext);
const [isTouch,setIsTouch] = useContext(TouchContext);
//____________VARIABLES____________
//____________VIEWS____________
const [themeMode,setThemeMode] = useContext(ThemeModeContext);
const [currentLView,setCurrentLView] = useContext(LoginViewContext);
const [currentNView,setCurrentNView] = useContext(NavbarViewContext);
const [currentSView,setCurrentSView] = useContext(SidebarViewContext);
const [isSidebar,setIsSidebar] = useContext(SidebarContext);
const [currentMView,setCurrentMView] = useContext(ModalViewContext);
const [isModal,setIsModal] = useContext(ModalContext);
//____________VIEWS____________